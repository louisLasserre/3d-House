/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 ./public/house.gltf --types -T --instance --keepmeshes
*/

import * as THREE from "three";
import React, { useRef, useMemo, useContext, createContext } from "react";
import { useGLTF, Merged } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { TransformMesh } from "./TransformMesh";
import useMeshControls from "@/hooks/useMeshControls";

type GLTFResult = GLTF & {
  nodes: {
    Walls: THREE.Mesh;
    Floor: THREE.Mesh;
    Rug: THREE.Mesh;
    DoubleCouch: THREE.Mesh;
    SingleCouch: THREE.Mesh;
    Frame: THREE.Mesh;
    Cube010: THREE.Mesh;
    Cube010_1: THREE.Mesh;
    CurtainHolders: THREE.Mesh;
    CurtainBar: THREE.Mesh;
    CurtainSecond: THREE.Mesh;
    Curtain: THREE.Mesh;
    Lamp: THREE.Mesh;
    Clock: THREE.Mesh;
    table: THREE.Mesh;
    Circle002: THREE.Mesh;
    Circle002_1: THREE.Mesh;
    Donut: THREE.Mesh;
    SideTable: THREE.Mesh;
    SideTableBase: THREE.Mesh;
    PlantPot: THREE.Mesh;
    BgGround: THREE.Mesh;
    Cube016: THREE.Mesh;
    Cube017: THREE.Mesh;
    Cube018: THREE.Mesh;
    Torus: THREE.Mesh;
    Cube011: THREE.Mesh;
    CouchCousin002: THREE.Mesh;
    CouchCousin: THREE.Mesh;
    CouchCousin001: THREE.Mesh;
    Cousin: THREE.Mesh;
    Cousin001: THREE.Mesh;
    Cousin002: THREE.Mesh;
    DoubleCouchLegs: THREE.Mesh;
    SingleCouchLegs: THREE.Mesh;
    Torus003: THREE.Mesh;
    BallLight: THREE.Mesh;
    Cube012: THREE.Mesh;
    Cube014: THREE.Mesh;
    Cube013: THREE.Mesh;
    TableFoots: THREE.Mesh;
    coffeePlate: THREE.Mesh;
    cupHandle: THREE.Mesh;
    DonutCream: THREE.Mesh;
    plate: THREE.Mesh;
    SideTableFoots: THREE.Mesh;
    SideTableMiddleRing: THREE.Mesh;
    Plants: THREE.Mesh;
  };
  materials: {
    MediumWhite: THREE.MeshStandardMaterial;
    Floor: THREE.MeshStandardMaterial;
    Yellow: THREE.MeshStandardMaterial;
    Green: THREE.MeshStandardMaterial;
    Wood: THREE.MeshStandardMaterial;
    MatBlack: THREE.MeshStandardMaterial;
    WindowLight: THREE.MeshStandardMaterial;
    BlackMetal: THREE.MeshStandardMaterial;
    Curtains: THREE.MeshStandardMaterial;
    MatWhite: THREE.MeshStandardMaterial;
    Coffee: THREE.MeshStandardMaterial;
    ReflectiveWhite: THREE.MeshStandardMaterial;
    Donut: THREE.MeshStandardMaterial;
    Blue: THREE.MeshStandardMaterial;
    MediumGreen: THREE.MeshStandardMaterial;
    YellowLight: THREE.MeshStandardMaterial;
    DonutCream: THREE.MeshStandardMaterial;
    LightGreen: THREE.MeshStandardMaterial;
  };
};

export function House() {
  const ref = useRef<any>();
  const { nodes } = useGLTF("/house-transformed.glb") as GLTFResult;

  const instances = useMemo(
    () => ({
      Cousin: nodes.Cousin,
      Cube012: nodes.Cube012,
      SideTable: nodes.SideTable,
      SideTableFoots: nodes.SideTableFoots,
      SideTableMiddleRing: nodes.SideTableMiddleRing,
      CouchCousin: nodes.CouchCousin,
      CurtainSecond: nodes.CurtainSecond,
    }),
    [nodes]
  );
  return (
    <Merged meshes={instances} ref={ref}>
      {(instances) => <HouseItems models={instances} />}
    </Merged>
  );
}

const SideTable = ({ elements, materials }) => {
  const { SideTable, SideTableFoots, SideTableMiddleRing } = elements;
  const { meshEvents } = useMeshControls("SideTable");
  return (
    <group {...meshEvents} name="SideTable">
      <SideTable position={[-0.915, 1.375, -0.596]} />
      <SideTable position={[-0.915, 1.332, -0.596]} scale={0.922} />
      <SideTableFoots
        name="SideTableFoots"
        geometry={SideTableFoots.geometry}
        material={materials.Wood}
        position={[-0.831, 1.296, -0.504]}
        rotation={[0, -0.858, 0]}
        scale={[0.039, 0.033, 0.039]}
      />
      <SideTableMiddleRing
        name="SideTableMiddleRing"
        geometry={SideTableMiddleRing.geometry}
        material={materials.Wood}
        position={[-0.915, 0.638, -0.596]}
        scale={1.069}
      />
    </group>
  );
};

export function HouseItems({ models }: { models: any }) {
  const { nodes, materials } = useGLTF("/house-transformed.glb") as GLTFResult;

  const { CurtainSecond, CouchCousin, Cousin, Cube012 } = models;
  return (
    <group dispose={null}>
      <TransformMesh
        name="Walls"
        geometry={nodes.Walls.geometry}
        material={materials.MediumWhite}
        position={[0, 1.965, 0]}
      />
      <TransformMesh
        name="Floor"
        geometry={nodes.Floor.geometry}
        material={materials.Floor}
        position={[0, 1.965, 0]}
      />
      <TransformMesh
        name="Rug"
        geometry={nodes.Rug.geometry}
        material={materials.Yellow}
        position={[0.503, 0.479, 0.485]}
      />
      <SideTable elements={models} materials={materials} />
      <TransformMesh
        name="DoubleCouch"
        geometry={nodes.DoubleCouch.geometry}
        material={materials.Green}
        position={[0.415, 0.581, -1.021]}
      />
      <TransformMesh
        name="SingleCouch"
        geometry={nodes.SingleCouch.geometry}
        material={materials.Green}
        position={[-0.966, 0.581, 0.345]}
        rotation={[0, Math.PI / 2, 0]}
      />
      <TransformMesh
        name="Frame"
        geometry={nodes.Frame.geometry}
        material={materials.Wood}
        position={[0.024, 2.179, -1.467]}
      />
      <group position={[0, 1.842, 0]}>
        <mesh geometry={nodes.Cube010.geometry} material={materials.MatBlack} />
        <mesh
          geometry={nodes.Cube010_1.geometry}
          material={materials.WindowLight}
        />
      </group>
      <TransformMesh
        name="CurtainHolders"
        geometry={nodes.CurtainHolders.geometry}
        material={materials.Wood}
        position={[-1.32, 2.873, 0.779]}
      />
      <TransformMesh
        name="CurtainBar"
        geometry={nodes.CurtainBar.geometry}
        material={materials.BlackMetal}
        position={[-1.267, 2.923, 0.001]}
        scale={0.064}
      />
      <CurtainSecond
        position={[-1.164, 2.279, 0.468]}
        scale={[0.81, 0.75, 0.225]}
      />
      <CurtainSecond
        position={[-1.164, 2.279, -0.267]}
        scale={[0.81, 0.75, 0.225]}
      />
      <TransformMesh
        name="Lamp"
        geometry={nodes.Lamp.geometry}
        material={materials.BlackMetal}
        position={[-1.083, 2.56, -1.48]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.584}
      />
      <TransformMesh
        name="Clock"
        geometry={nodes.Clock.geometry}
        material={materials.MatWhite}
        position={[-1.46, 2.399, 1.025]}
        rotation={[0, 0, -Math.PI / 2]}
      />
      <TransformMesh
        name="table"
        geometry={nodes.table.geometry}
        material={materials.Wood}
        position={[0.474, 0.779, 0.526]}
        scale={[0.602, 0.37, 0.37]}
      />
      <group position={[0.166, 0.875, 0.547]} scale={0.074}>
        <mesh geometry={nodes.Circle002.geometry} material={materials.Coffee} />
        <mesh
          geometry={nodes.Circle002_1.geometry}
          material={materials.ReflectiveWhite}
        />
      </group>
      <TransformMesh
        name="Donut"
        geometry={nodes.Donut.geometry}
        material={materials.Donut}
        position={[0.606, 0.937, 0.457]}
        rotation={[0.007, 0.047, 0.158]}
        scale={0.506}
      />

      <TransformMesh
        name="PlantPot"
        geometry={nodes.PlantPot.geometry}
        material={materials.MatWhite}
        position={[-0.88, 1.388, -0.669]}
        scale={[0.369, 1.501, 0.369]}
      />
      <TransformMesh
        name="BgGround"
        geometry={nodes.BgGround.geometry}
        material={nodes.BgGround.material}
        scale={10.216}
      />
      <TransformMesh
        name="Cube016"
        geometry={nodes.Cube016.geometry}
        material={materials.BlackMetal}
        position={[5.7, 0, -3.622]}
        scale={0.162}
      />
      <TransformMesh
        name="Cube017"
        geometry={nodes.Cube017.geometry}
        material={nodes.Cube017.material}
        position={[6.131, 0, -3.622]}
        scale={[0.096, 0.121, 0.162]}
      />
      <TransformMesh
        name="Cube018"
        geometry={nodes.Cube018.geometry}
        material={nodes.Cube018.material}
        position={[6.579, 0, -3.622]}
        scale={[0.084, 0.106, 0.162]}
      />
      <TransformMesh
        name="Blue"
        geometry={nodes.Torus.geometry}
        material={materials.Blue}
      />
      <TransformMesh
        name="MatBlack"
        geometry={nodes.Cube011.geometry}
        material={materials.MatBlack}
      />
      <TransformMesh
        name="CouchCousin002"
        geometry={nodes.CouchCousin002.geometry}
        material={materials.Yellow}
        position={[0.779, 1.302, -1.151]}
        rotation={[1.139, 0, 0]}
        scale={[0.39, 0.171, 0.39]}
      />
      <CouchCousin
        position={[0.038, 1.302, -1.151]}
        rotation={[1.139, 0, 0]}
        scale={[0.39, 0.171, 0.39]}
      />
      <CouchCousin
        position={[-1.096, 1.302, 0.715]}
        rotation={[Math.PI / 2, 0.432, -Math.PI / 2]}
        scale={[0.39, 0.171, 0.39]}
      />
      <Cousin
        position={[0.875, 1.082, -0.819]}
        rotation={[0.331, -0.327, 0.104]}
        scale={[0.771, 0.9, 0.77]}
      />
      <Cousin
        position={[-0.737, 1.112, 0.942]}
        rotation={[-1.256, 1.318, 0.729]}
        scale={[0.771, 0.9, 0.77]}
      />
      <TransformMesh
        name="Cousin002"
        geometry={nodes.Cousin002.geometry}
        material={materials.Yellow}
        position={[-0.182, 1.112, -0.792]}
        rotation={[-0.241, -0.078, -0.536]}
        scale={[0.771, 0.9, 0.77]}
      />
      <TransformMesh
        name="DoubleCouchLegs"
        geometry={nodes.DoubleCouchLegs.geometry}
        material={materials.BlackMetal}
        position={[0.415, 0.581, -1.021]}
      />
      <TransformMesh
        name="SingleCouchLegs"
        geometry={nodes.SingleCouchLegs.geometry}
        material={materials.BlackMetal}
        position={[-0.966, 0.581, 0.705]}
        rotation={[0, Math.PI / 2, 0]}
      />
      <TransformMesh
        name="Torus003"
        geometry={nodes.Torus003.geometry}
        material={materials.Blue}
        position={[-1.261, 2.923, 0.546]}
        rotation={[1.134, -0.025, 0.461]}
        scale={[1.68, 2.251, 1.182]}
      />
      <TransformMesh
        name="BallLight"
        geometry={nodes.BallLight.geometry}
        material={materials.YellowLight}
        position={[-1.083, 2.169, -1.115]}
        scale={0.143}
      />
      <Cube012 position={[-1.445, 2.399, 1.025]} scale={[0.007, 0.018, 0.05]} />
      <Cube012
        position={[-1.435, 2.399, 1.022]}
        rotation={[-2.167, 0, 0]}
        scale={[0.004, 0.004, 0.065]}
      />
      <TransformMesh
        name="Cube013"
        geometry={nodes.Cube013.geometry}
        material={materials.MatBlack}
        position={[-1.446, 2.399, 1.025]}
        rotation={[2.319, 0, 0]}
        scale={[0.007, 0.011, 0.05]}
      />
      <TransformMesh
        name="TableFoots"
        geometry={nodes.TableFoots.geometry}
        material={materials.BlackMetal}
        position={[0.768, 0.721, 0.671]}
        scale={[0.683, 0.738, 0.683]}
      />
      <TransformMesh
        name="coffeePlate"
        geometry={nodes.coffeePlate.geometry}
        material={materials.ReflectiveWhite}
        position={[0.166, 0.902, 0.547]}
        scale={0.053}
      />
      <TransformMesh
        name="cupHandle"
        geometry={nodes.cupHandle.geometry}
        material={materials.ReflectiveWhite}
        position={[0.166, 0.875, 0.547]}
        scale={[0.068, 0.074, 0.074]}
      />
      <TransformMesh
        name="DonutCream"
        geometry={nodes.DonutCream.geometry}
        material={materials.DonutCream}
        position={[0.606, 0.933, 0.457]}
        rotation={[0.007, 0.047, 0.158]}
        scale={0.506}
      />
      <TransformMesh
        name="plate"
        geometry={nodes.plate.geometry}
        material={materials.ReflectiveWhite}
        position={[0.576, 0.897, 0.461]}
      />

      <TransformMesh
        name="Plants"
        geometry={nodes.Plants.geometry}
        material={materials.LightGreen}
        position={[-0.846, 1.548, -0.679]}
        rotation={[-Math.PI, -0.401, -Math.PI]}
        scale={[0.02, 0.027, 0.036]}
      />
    </group>
  );
}

useGLTF.preload("/house-transformed.glb");
